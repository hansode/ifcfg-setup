#!/bin/bash
#
# requires:
#  bash
#  sed, ls
#
# usage:
#  iftree [ NIC ] [ NIC ] ...
#
# url:
#  https://github.com/hansode/ifutils
#
set -e
set -o pipefail

function nic_type() {
  local nic=${1}
  [[ -n "${nic}" ]] || return 1
  local type=ethernet

  if   [[ -d /sys/class/net/${nic}/bridge ]]; then
    type=bridge
  elif [[ -d /sys/class/net/${nic}/bonding ]]; then
    type=bonding
  elif [[ -f /sys/class/net/${nic}/tun_flags ]]; then
    type=tap
  elif [[ "$(< /sys/class/net/${nic}/ifindex)" != "$(< /sys/class/net/${nic}/iflink)" ]]; then
    type=vlan
  elif [[ "$(< /sys/class/net/${nic}/type)" == 772 ]]; then
    type=lo
  fi

  echo ${type}
}

function indent() {
  sed "s,^,  ," < /dev/stdin
}

function shownic() {
  local nic=${1}
  [[ -n "${nic}" ]] || return 1

  echo -n "device=${nic} "
  local type=$(nic_type ${nic})

  echo -n "type=${type} "
  case "${type}" in
    ethernet|lo|tap)
      echo
      ;;
    bridge)
      local brif="$(ls /sys/class/net/${nic}/brif/)"
      echo brif=\"${brif}\"

      local slave
      for slave in ${brif}; do
        shownic ${slave} | indent
      done
      ;;
    bonding)
      local slaves="$(< /sys/class/net/${nic}/bonding/slaves)"
      echo slaves=\"${slaves}\"

      local slave
      for slave in ${slaves}; do
        shownic ${slave} | indent
      done
      ;;
    vlan)
      local iflink=$(< /sys/class/net/${nic}/iflink) master i

      for i in /sys/class/net/*/ifindex; do
        [[ "$(< ${i})" == "${iflink}" ]] || continue
        master=$(basename ${i%%/ifindex})
      done
      echo master=${master}

      if [[ -n "${master}" ]]; then
        shownic ${master} | indent
      fi
      ;;
    *)
      echo
      ;;
  esac
}

if [[ ${#} != 0 ]]; then
  while [[ "${1}" ]]; do
    nic=${1}; shift
    [[ -L "/sys/class/net/${nic}" ]] || continue
    shownic ${nic}
  done
else
  for nic in /sys/class/net/*; do
    [[ -L "${nic}" ]] || continue
    shownic $(basename ${nic})
  done
fi
